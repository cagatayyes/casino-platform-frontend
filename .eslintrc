{
	"env": {
		"browser": true,
		"node": true,
		"es6": true
	},
	"globals": {
		"$": true,
		"require": true,
		"process": true
	},
	"parser": "@typescript-eslint/parser",
	"plugins": [
		"@typescript-eslint",
		"unused-imports",
		"eslint-plugin-react",
		"require-explicit-generics"
	],
	"extends": [
		"eslint:recommended",
		"plugin:@typescript-eslint/recommended",
		"plugin:react/recommended",
		"plugin:react-hooks/recommended",
		"plugin:jest/recommended"
	],
	"parserOptions": {
		"ecmaVersion": "latest",
		"sourceType": "module",
		"ecmaFeatures": {
			"jsx": true
		}
	},
	"settings": {
		"react": {
			"version": "detect" // Automatically detect the react version
		},
		"import/extensions": [
			".js",
			".jsx",
			".ts",
			".tsx"
		],
		"import/parsers": {
			"@typescript-eslint/parser": [
				".ts",
				".tsx"
			]
		},
		"import/resolver": {
			"node": {
				"extensions": [
					".js",
					".jsx",
					".ts",
					".tsx"
				]
			},
			"typescript": {}
		}
	},
	"rules": {
		// Your custom rules here
		"@typescript-eslint/no-var-requires": "error",
		"react/react-in-jsx-scope": "off",
		"react/jsx-uses-react": "off",
		"max-len": [
			"warn",
			{
				"code": 160,
				"ignoreUrls": true,
				"ignoreComments": true,
				"ignoreStrings": true
			}
		],
		"indent": ["warn", "tab"],
		"max-depth": ["error", 4],
		"object-curly-spacing": ["error", "always"],
		"semi": ["warn", "always"],
		"react/jsx-max-props-per-line": [
			"warn",
			{
				"maximum": 1,
				"when": "always"
			}
		],
		"no-unexpected-multiline": "error",
		"quotes": [
			"Warn",
			"single"
		],
		"@typescript-eslint/no-inferrable-types": 0,
		"@typescript-eslint/naming-convention": [
			"error",
			{
				"selector": "default",
				"format": [
					"camelCase",
					"PascalCase",
					"UPPER_CASE"
				]
			},
			{
				"selector": "variable",
				"format": [
					"camelCase",
					"UPPER_CASE",
					"PascalCase"
				]
			},
			{
				"selector": "property",
				"format": []
			},
			{
				"selector": "parameter",
				"format": [
					"camelCase",
					"PascalCase"
				]
			},
			{
				"selector": "typeLike",
				"format": [
					"PascalCase"
				]
			},
			{
				"selector": "interface",
				"format": [
					"PascalCase"
				],
				"custom": {
					"regex": "^I[A-Z]",
					"match": true
				}
			}
		],
		"require-explicit-generics/require-explicit-generics": [
			"error"
		],
		"@typescript-eslint/no-explicit-any": "error",
		"@typescript-eslint/space-before-blocks": "warn",
		"@typescript-eslint/no-non-null-assertion": "off",
		"react/self-closing-comp": [
			"error",
			{
				"component": true,
				"html": false
			}
		],
		"newline-before-return": "warn",
		"eol-last": [
			"warn",
			"always"
		],
		"no-console": "error",
		"no-trailing-spaces": "error",
		"no-multiple-empty-lines": "error",
		"@typescript-eslint/explicit-function-return-type": "warn",
		"unused-imports/no-unused-imports": "error",
		"unused-imports/no-unused-vars": [
			"warn",
			{
				"vars": "all",
				"varsIgnorePattern": "^_",
				"args": "after-used",
				"argsIgnorePattern": "^_"
			}
		]
	},
	"overrides": [
		{
			"files": [
				"*.ts",
				"*.tsx"
			],
			"rules": {
				"react-hooks/exhaustive-deps": "off"
			}
		}
	]
}